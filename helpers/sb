#!/usr/bin/env python

import sys

def display_chessboard(u64):
    # Create a mapping of bits to chessboard squares
    board = [["." for _ in range(8)] for _ in range(8)]

    # Populate the chessboard based on the U64 input
    for i in range(64):
        if u64 & (1 << i):
            # Calculate row and column based on Little-Endian Rank-File (LERF) mapping
            row = i // 8
            col = i % 8
            board[row][col] = "X"  # Mark the square as occupied

    # Print the chessboard
    for row in reversed(board):  # Print from the 8th rank to the 1st
        print(" ".join(row))

    print("")

# arg 1
if len(sys.argv) != 2:
    # use stdin
    u64_hex = sys.stdin.readline().strip()
else:
    u64_hex = sys.argv[1]

display_chessboard(int(u64_hex, 16))
